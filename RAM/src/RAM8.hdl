/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next clock cycle).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way  (
                 in=load, sel=address, 
                 a=loadReg0, b=loadReg1, c=loadReg2, d=loadReg3, 
                 e=loadReg4, f=loadReg5, g=loadReg6, h=loadReg7
              );
    
    Register  (in=in, load=loadReg0, out=reg0);
    Register  (in=in, load=loadReg1, out=reg1);
    Register  (in=in, load=loadReg2, out=reg2);
    Register  (in=in, load=loadReg3, out=reg3);
    Register  (in=in, load=loadReg4, out=reg4);
    Register  (in=in, load=loadReg5, out=reg5);
    Register  (in=in, load=loadReg6, out=reg6);
    Register  (in=in, load=loadReg7, out=reg7);

    Mux8Way16 (
                 sel=address, out=out,
                 a=reg0, b=reg1, c=reg2, d=reg3, 
                 e=reg4, f=reg5, g=reg6, h=reg7
              );
}