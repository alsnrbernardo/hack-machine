/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:

    DMux8Way (
                in=load, sel=address[3..5],
                a=loadRam0, b=loadRam1, c=loadRam2, d=loadRam3,
                e=loadRam4, f=loadRam5, g=loadRam6, h=loadRam7
             );

    RAM8 (in=in, load=loadRam0, address=address[0..2], out=innerRam0);
    RAM8 (in=in, load=loadRam1, address=address[0..2], out=innerRam1);
    RAM8 (in=in, load=loadRam2, address=address[0..2], out=innerRam2);
    RAM8 (in=in, load=loadRam3, address=address[0..2], out=innerRam3);

    RAM8 (in=in, load=loadRam4, address=address[0..2], out=innerRam4);
    RAM8 (in=in, load=loadRam5, address=address[0..2], out=innerRam5);
    RAM8 (in=in, load=loadRam6, address=address[0..2], out=innerRam6);
    RAM8 (in=in, load=loadRam7, address=address[0..2], out=innerRam7);

    Mux8Way16 (
                sel=address[3..5], out=out,
                a=innerRam0, b=innerRam1, c=innerRam2, d=innerRam3,
                e=innerRam4, f=innerRam5, g=innerRam6, h=innerRam7
              );
}
